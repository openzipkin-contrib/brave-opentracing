# Run `travis lint` when changing this file to avoid breaking the build.

# We use LXD containers where possible as they boot much faster than full VMs
# See https://docs.travis-ci.com/user/reference/overview/#for-a-particular-travisyml-configuration
arch: arm64           # LXD container based build for OSS only
os: linux             # required for arch different than amd64
dist: focal           # newest available distribution

# license-maven-plugin needs the full history to generate copyright year range. Ex. 2013-2020
# Don't do a shallow clone, as it interferes with this.
git:
  depth: false

language: java

cache:
  directories:
    - $HOME/.m2

# The OS install of JDK 11 is fine, and faster than us re-installing it each time
before_install:
  - |
    # Cache as help:evaluate is not quick
    export POM_VERSION=$(./mvnw help:evaluate -N -Dexpression=project.version -q -DforceStdout)

    # Disable testcontainers checks
    echo checks.disable=true > ~/.testcontainers.properties
  - |
    # Credentials entered into https://travis-ci.org/github/openzipkin/${REPO}/settings are access
    # controlled by branch (typically only master). Check to see if a well-known env is available
    # before attempting to log in.
    if [[ -n "$SONATYPE_USER" ]]; then
      # allocate commits to CI, not the owner of the deploy key
      git config user.name "zipkinci"
      git config user.email "zipkinci+zipkin-dev@googlegroups.com"

      # setup https authentication credentials, used by ./mvnw release:prepare
      git config credential.helper "store --file=.git/credentials"
      echo "https://$GH_TOKEN:@github.com" > .git/credentials

      # ensure GPG commands work non-interactively
      export GPG_TTY=$(tty)
      # import signing key used for jar files
      echo ${GPG_SIGNING_KEY} | base64 --decode | gpg --batch --passphrase ${GPG_PASSPHRASE} --import
    fi

install:
  - |
    # use a go-offline that properly works with multi-module builds
    ./mvnw -q --batch-mode -nsu -Prelease de.qaware.maven:go-offline-maven-plugin:resolve-dependencies
script: ./travis/publish.sh

# Don't build release tags. This avoids publish conflicts because the version commit exists both on master and the release tag.
# See https://github.com/travis-ci/travis-ci/issues/1532
branches:
  except:
    - /^[0-9]/

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/ead3c37d57527214e9f2
      - https://webhooks.gitter.im/e/9f1ee2f315d32956f8d6
    on_success: change
    on_failure: always

# Secure variables needed for release and publication
#
# When Travis, add to https://travis-ci.org/github/openzipkin/${REPO}/settings
#
# GH_TOKEN=XXX-https://github.com/settings/tokens-XXX
#   - makes release commits and tags, also writes to GHCR if Docker
#   - needs repo:status, public_repo and if Docker write:packages, delete:packages
#   - referenced in .settings.xml
#   - store like this: echo "https://$GH_TOKEN:@github.com" > .git/credentials
# GPG_SIGNING_KEY=$(gpg -a --export-secret-keys zipkin-admin@googlegroups.com |base64)
#   - used to sign jars in release commands
#   - sent to keyserver.ubuntu.com
#   - import like this: echo ${GPG_SIGNING_KEY} | base64 --decode | gpg --batch --passphrase ${GPG_PASSPHRASE} --import
# GPG_PASSPHRASE=passphrase_for_GPG_SIGNING_KEY
#   - referenced in .settings.xml
# SONATYPE_USER=your_sonatype_account_token
#   - used to publish to Maven Central via https://oss.sonatype.org/#stagingRepositories
#   - needs access to io.zipkin via https://issues.sonatype.org/browse/OSSRH-16669
#   - generate via https://oss.sonatype.org/#profile;User%20Token
#   - referenced in .settings.xml
# SONATYPE_PASSWORD=password_to_SONATYPE_USER
#   - referenced in .settings.xml
